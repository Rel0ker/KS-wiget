#!/usr/bin/env python
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –Ω–∞—á–∞–ª—å–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö –≤ —Å–∏—Å—Ç–µ–º–µ KS Widget
–ó–∞–ø—É—Å–∫–∞—Ç—å –ø–æ—Å–ª–µ —Å–æ–∑–¥–∞–Ω–∏—è —Å—É–ø–µ—Ä–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
"""

import os
import sys
import django
from datetime import date, timedelta

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Django
os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'ks_widget.settings')
django.setup()

from groups.models import LanguageLevel, Group, DayOfWeek, TimeSlot
from django.contrib.auth.models import User

def create_initial_data():
    """–°–æ–∑–¥–∞–Ω–∏–µ –Ω–∞—á–∞–ª—å–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö"""
    
    print("–°–æ–∑–¥–∞–Ω–∏–µ –Ω–∞—á–∞–ª—å–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö –¥–ª—è KS Widget...")
    
    # –°–æ–∑–¥–∞–Ω–∏–µ –¥–Ω–µ–π –Ω–µ–¥–µ–ª–∏
    days_data = [
        {'name': 'monday', 'order': 1},
        {'name': 'tuesday', 'order': 2},
        {'name': 'wednesday', 'order': 3},
        {'name': 'thursday', 'order': 4},
        {'name': 'friday', 'order': 5},
        {'name': 'saturday', 'order': 6},
        {'name': 'sunday', 'order': 7},
    ]
    
    for day_data in days_data:
        day, created = DayOfWeek.objects.get_or_create(
            name=day_data['name'],
            defaults=day_data
        )
        if created:
            print(f"‚úì –°–æ–∑–¥–∞–Ω –¥–µ–Ω—å –Ω–µ–¥–µ–ª–∏: {day}")
        else:
            print(f"‚óã –î–µ–Ω—å –Ω–µ–¥–µ–ª–∏ —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç: {day}")
    
    # –°–æ–∑–¥–∞–Ω–∏–µ –≤—Ä–µ–º–µ–Ω–Ω—ã—Ö —Å–ª–æ—Ç–æ–≤
    time_slots_data = [
        {'start_time': '09:00', 'end_time': '10:30'},
        {'start_time': '10:00', 'end_time': '11:30'},
        {'start_time': '11:00', 'end_time': '12:30'},
        {'start_time': '12:00', 'end_time': '13:30'},
        {'start_time': '13:00', 'end_time': '14:30'},
        {'start_time': '14:00', 'end_time': '15:30'},
        {'start_time': '15:00', 'end_time': '16:30'},
        {'start_time': '16:00', 'end_time': '17:30'},
        {'start_time': '17:00', 'end_time': '18:30'},
        {'start_time': '18:00', 'end_time': '19:30'},
        {'start_time': '19:00', 'end_time': '20:30'},
        {'start_time': '20:00', 'end_time': '21:30'},
        {'start_time': '21:00', 'end_time': '22:30'},
    ]
    
    for slot_data in time_slots_data:
        slot, created = TimeSlot.objects.get_or_create(
            start_time=slot_data['start_time'],
            end_time=slot_data['end_time'],
            defaults=slot_data
        )
        if created:
            print(f"‚úì –°–æ–∑–¥–∞–Ω –≤—Ä–µ–º–µ–Ω–Ω–æ–π —Å–ª–æ—Ç: {slot}")
        else:
            print(f"‚óã –í—Ä–µ–º–µ–Ω–Ω–æ–π —Å–ª–æ—Ç —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç: {slot}")
    
    # –°–æ–∑–¥–∞–Ω–∏–µ —É—Ä–æ–≤–Ω–µ–π —è–∑—ã–∫–∞
    levels_data = [
        {
            'name': '–ù–∞—á–∏–Ω–∞—é—â–∏–π (Beginner)',
            'description': '–î–ª—è —Ç–µ—Ö, –∫—Ç–æ —Ç–æ–ª—å–∫–æ –Ω–∞—á–∏–Ω–∞–µ—Ç –∏–∑—É—á–∞—Ç—å –∫–æ—Ä–µ–π—Å–∫–∏–π —è–∑—ã–∫',
            'order': 1
        },
        {
            'name': '–°—Ä–µ–¥–Ω–∏–π (Intermediate)',
            'description': '–î–ª—è —Ç–µ—Ö, –∫—Ç–æ —É–∂–µ –∑–Ω–∞–µ—Ç –æ—Å–Ω–æ–≤—ã –∫–æ—Ä–µ–π—Å–∫–æ–≥–æ —è–∑—ã–∫–∞',
            'order': 2
        },
        {
            'name': '–ü—Ä–æ–¥–≤–∏–Ω—É—Ç—ã–π (Advanced)',
            'description': '–î–ª—è —Ç–µ—Ö, –∫—Ç–æ —Å–≤–æ–±–æ–¥–Ω–æ –≤–ª–∞–¥–µ–µ—Ç –∫–æ—Ä–µ–π—Å–∫–∏–º —è–∑—ã–∫–æ–º',
            'order': 3
        }
    ]
    
    levels = []
    for level_data in levels_data:
        level, created = LanguageLevel.objects.get_or_create(
            name=level_data['name'],
            defaults=level_data
        )
        levels.append(level)
        if created:
            print(f"‚úì –°–æ–∑–¥–∞–Ω —É—Ä–æ–≤–µ–Ω—å: {level.name}")
        else:
            print(f"‚óã –£—Ä–æ–≤–µ–Ω—å —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç: {level.name}")
    
    # –°–æ–∑–¥–∞–Ω–∏–µ –≥—Ä—É–ø–ø
    groups_data = [
        {
            'name': '–ö–æ—Ä–µ–π—Å–∫–∏–π –¥–ª—è –Ω–∞—á–∏–Ω–∞—é—â–∏—Ö - –ì—Ä—É–ø–ø–∞ –ê',
            'level': levels[0],
            'total_capacity': 15,
            'current_participants': 8,
            'color': '#3B82F6',
            'description': '–ö—É—Ä—Å –¥–ª—è —Ç–µ—Ö, –∫—Ç–æ —Ç–æ–ª—å–∫–æ –Ω–∞—á–∏–Ω–∞–µ—Ç –∏–∑—É—á–∞—Ç—å –∫–æ—Ä–µ–π—Å–∫–∏–π —è–∑—ã–∫. –ò–∑—É—á–∞–µ–º –∞–ª—Ñ–∞–≤–∏—Ç, –±–∞–∑–æ–≤—ã–µ —Ñ—Ä–∞–∑—ã –∏ –≥—Ä–∞–º–º–∞—Ç–∏–∫—É.',
            'start_date': date.today() + timedelta(days=7),
            'schedule': '–ü–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫, –°—Ä–µ–¥–∞, –ü—è—Ç–Ω–∏—Ü–∞ 18:00-19:30',
            'is_active': True
        },
        {
            'name': '–ö–æ—Ä–µ–π—Å–∫–∏–π –¥–ª—è –Ω–∞—á–∏–Ω–∞—é—â–∏—Ö - –ì—Ä—É–ø–ø–∞ –ë',
            'level': levels[0],
            'total_capacity': 12,
            'current_participants': 5,
            'color': '#10B981',
            'description': '–í—Ç–æ—Ä–∞—è –≥—Ä—É–ø–ø–∞ –¥–ª—è –Ω–∞—á–∏–Ω–∞—é—â–∏—Ö. –ò–∑—É—á–∞–µ–º –æ—Å–Ω–æ–≤—ã –∫–æ—Ä–µ–π—Å–∫–æ–≥–æ —è–∑—ã–∫–∞ –≤ —É–¥–æ–±–Ω–æ–µ –≤—Ä–µ–º—è.',
            'start_date': date.today() + timedelta(days=14),
            'schedule': '–í—Ç–æ—Ä–Ω–∏–∫, –ß–µ—Ç–≤–µ—Ä–≥ 19:00-20:30',
            'is_active': True
        },
        {
            'name': '–ö–æ—Ä–µ–π—Å–∫–∏–π —Å—Ä–µ–¥–Ω–∏–π —É—Ä–æ–≤–µ–Ω—å',
            'level': levels[1],
            'total_capacity': 10,
            'current_participants': 7,
            'color': '#F59E0B',
            'description': '–ö—É—Ä—Å –¥–ª—è –ø—Ä–æ–¥–æ–ª–∂–∞—é—â–∏—Ö –∏–∑—É—á–µ–Ω–∏–µ. –£–≥–ª—É–±–ª—è–µ–º –∑–Ω–∞–Ω–∏—è –≥—Ä–∞–º–º–∞—Ç–∏–∫–∏, —Ä–∞—Å—à–∏—Ä—è–µ–º —Å–ª–æ–≤–∞—Ä–Ω—ã–π –∑–∞–ø–∞—Å.',
            'start_date': date.today() + timedelta(days=3),
            'schedule': '–ü–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫, –ß–µ—Ç–≤–µ—Ä–≥ 20:00-21:30',
            'is_active': True
        },
        {
            'name': '–ö–æ—Ä–µ–π—Å–∫–∏–π –ø—Ä–æ–¥–≤–∏–Ω—É—Ç—ã–π —É—Ä–æ–≤–µ–Ω—å',
            'level': levels[2],
            'total_capacity': 8,
            'current_participants': 6,
            'color': '#EF4444',
            'description': '–ö—É—Ä—Å –¥–ª—è –ø—Ä–æ–¥–≤–∏–Ω—É—Ç—ã—Ö —Å—Ç—É–¥–µ–Ω—Ç–æ–≤. –ò–∑—É—á–∞–µ–º —Å–ª–æ–∂–Ω—É—é –≥—Ä–∞–º–º–∞—Ç–∏–∫—É, —á–∏—Ç–∞–µ–º –ª–∏—Ç–µ—Ä–∞—Ç—É—Ä—É, —Å–º–æ—Ç—Ä–∏–º —Ñ–∏–ª—å–º—ã.',
            'start_date': date.today() + timedelta(days=1),
            'schedule': '–°—Ä–µ–¥–∞, –°—É–±–±–æ—Ç–∞ 19:00-21:00',
            'is_active': True
        },
        {
            'name': '–†–∞–∑–≥–æ–≤–æ—Ä–Ω—ã–π –∫–æ—Ä–µ–π—Å–∫–∏–π',
            'level': levels[1],
            'total_capacity': 12,
            'current_participants': 4,
            'color': '#8B5CF6',
            'description': '–°–ø–µ—Ü–∏–∞–ª—å–Ω—ã–π –∫—É—Ä—Å –¥–ª—è —Ä–∞–∑–≤–∏—Ç–∏—è —Ä–∞–∑–≥–æ–≤–æ—Ä–Ω—ã—Ö –Ω–∞–≤—ã–∫–æ–≤. –ú–Ω–æ–≥–æ –ø—Ä–∞–∫—Ç–∏–∫–∏ –æ–±—â–µ–Ω–∏—è.',
            'start_date': date.today() + timedelta(days=21),
            'schedule': '–ü—è—Ç–Ω–∏—Ü–∞ 18:00-20:00, –°—É–±–±–æ—Ç–∞ 10:00-12:00',
            'is_active': True
        }
    ]
    
    for group_data in groups_data:
        group, created = Group.objects.get_or_create(
            name=group_data['name'],
            defaults=group_data
        )
        if created:
            print(f"‚úì –°–æ–∑–¥–∞–Ω–∞ –≥—Ä—É–ø–ø–∞: {group.name}")
        else:
            print(f"‚óã –ì—Ä—É–ø–ø–∞ —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç: {group.name}")
    
    print("\n‚úÖ –ù–∞—á–∞–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ —Å–æ–∑–¥–∞–Ω—ã —É—Å–ø–µ—à–Ω–æ!")
    print("\nüìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:")
    print(f"   - –î–Ω–µ–π –Ω–µ–¥–µ–ª–∏: {DayOfWeek.objects.count()}")
    print(f"   - –í—Ä–µ–º–µ–Ω–Ω—ã—Ö —Å–ª–æ—Ç–æ–≤: {TimeSlot.objects.count()}")
    print(f"   - –£—Ä–æ–≤–Ω–µ–π —è–∑—ã–∫–∞: {LanguageLevel.objects.count()}")
    print(f"   - –ì—Ä—É–ø–ø: {Group.objects.count()}")
    print(f"   - –ê–∫—Ç–∏–≤–Ω—ã—Ö –≥—Ä—É–ø–ø: {Group.objects.filter(is_active=True).count()}")
    
    print("\nüîó –°—Å—ã–ª–∫–∏ –¥–ª—è –¥–æ—Å—Ç—É–ø–∞:")
    print("   - –ê–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å Django: http://localhost:8000/admin/")
    print("   - API –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è: http://localhost:8000/api/docs/")
    print("   - Frontend –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å: http://localhost:3000")
    print("   - –í–∏–¥–∂–µ—Ç: http://localhost:3000/widget/")

if __name__ == '__main__':
    try:
        create_initial_data()
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –¥–∞–Ω–Ω—ã—Ö: {e}")
        sys.exit(1)
