version: '3.8'

services:
  # PostgreSQL Database
  db:
    image: postgres:15
    environment:
      POSTGRES_DB: ks_widget
      POSTGRES_USER: ks_widget
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    restart: unless-stopped
    networks:
      - ks_network

  # Backend Django API
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    environment:
      - DEBUG=False
      - SECRET_KEY=${SECRET_KEY}
      - DB_NAME=ks_widget
      - DB_USER=ks_widget
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_HOST=db
      - DB_PORT=5432
      - ALLOWED_HOSTS=back.ks.dev-re.ru,localhost,127.0.0.1
    volumes:
      - backend_static:/app/staticfiles
      - backend_media:/app/media
      - backend_logs:/app/logs
    depends_on:
      - db
    restart: unless-stopped
    networks:
      - ks_network
    ports:
      - "8000:8000"

  # Frontend Vue.js Admin
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    environment:
      - VITE_API_URL=https://back.ks.dev-re.ru
    volumes:
      - frontend_dist:/app/dist
    restart: unless-stopped
    networks:
      - ks_network
    ports:
      - "3000:3000"

  # Nginx Reverse Proxy
  nginx:
    image: nginx:alpine
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
      - backend_static:/var/www/backend/static
      - backend_media:/var/www/backend/media
      - frontend_dist:/var/www/frontend
      - ./widget:/var/www/ks.dev-re.ru
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      - backend
      - frontend
    restart: unless-stopped
    networks:
      - ks_network

volumes:
  postgres_data:
  backend_static:
  backend_media:
  backend_logs:
  frontend_dist:

networks:
  ks_network:
    driver: bridge
